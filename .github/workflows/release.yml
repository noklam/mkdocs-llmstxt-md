name: Release to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      upload_to_pypi:
        description: 'Upload to PyPI (vs TestPyPI)'
        required: true
        type: boolean
        default: false

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: pdm install

    - name: Lint with ruff
      run: |
        pdm run ruff check
        pdm run ruff format --check

    - name: Test plugin installation
      run: |
        pdm install -e .
        pdm list | grep mkdocs-llmstxt-md

    - name: Test with example site
      run: |
        cd test-site
        pdm run mkdocs build
        # Verify expected files exist
        test -f site/llms.txt
        test -f site/llms-full.txt
        test -f site/index.md
        test -f site/quickstart/index.md

    - name: Build package
      run: pdm build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: github.event.inputs.upload_to_pypi != 'true'
    needs:
    - build
    runs-on: ubuntu-latest
    environment: 
      name: testpypi
      url: https://test.pypi.org/p/mkdocs-llmstxt-md

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    if: github.event.inputs.upload_to_pypi == 'true' || startsWith(github.ref, 'refs/tags/v')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mkdocs-llmstxt-md

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'